1. Count the total number of active users.

[
      {
$match: {
                  "isActive": true
            }
      },
      {
$count: "Total no of Active user"
      }
]
ans:----- Total no of Active user 6

<!-- ---------------------------------------------------------------- -->

2. Find the average age of male and female.

[
      {
$group: {
_id: "$gender",
                  "avarage of age": {
$avg: "$age"
                  }
            }
      }
]
ans--------
{
"\_id": "Female",
      "avarage of age": 28.2
}
{
"\_id": "Male",
      "avarage of age": 28.8
}

3. Give the total number of posts by active users.

[
      {
$match: {
                  "isActive": true,
            }
      },
      {
$unwind: {
         path: "$posts"
            }
      },
      {
$group: {
      _id: "$\_id",
                  "count of posts": {
$sum: 1
                  }
            }
      }
]

ans----------------
\_id
6
count of posts
2
\_id
8
count of posts
2
\_id
1
count of posts
2
\_id
10
count of posts
2
\_id
2
count of posts
2
\_id
4
count of posts
2

4. Count the total number of comments.

[
      {
$unwind: {
path: "$posts",
            }
      },
      {
$project: {
                  "comments": {
$size: "$posts.comments"
                  }
            }
      },
      {
$group: {
_id: "$_id",
                  "total comments": {
$sum:"$comments
                  }
            }
      }
]
ans------------------

\_id
4
count of comments
2
\_id
3
count of comments
2
\_id
5
count of comments
2
\_id
2
count of comments
2
\_id
8
count of comments
2
\_id
9
count of comments
2
\_id
7
count of comments
2
\_id
1
count of comments
2
\_id
10
count of comments
2
\_id
6
count of comments
2 5. List users and their total likes.

6. Find the user name with the maximum likes of posts.

[
      {
$unwind: {
path: "$posts",
            }
      },
      {
$group: {
_id: "$_id",
name: {$first: "$name"
                  },
                  "totalLikes": {
$sum: "$posts.likes"
                  }
            }
      },
      {
            "$sort": {
                  "totalLikes": -1
            }
      },
      {
$limit: 1
      },
      {
$project: {
_id: "$_id",
name: 1,
                  "totalLikes": 1
            }
      }
]

ans------
totalLikes
47
name
"Fiona Miller"

7. Count the number of active and inactive users.

[
      {
$group: {
                  "_id": "$isActive",
isActive: {$first: "$isActive"
                  },
                  "count": {
                        "$sum": 1
                  }
            }
      },
      {
$project: {
_id: 0,
            }
      }
]
ans ------------

isActive true
count 6
isActive false
count 4

8. List the cities with the highest average age.
   [
      {
            "$group": {
                  "_id": "$city",
                  "averageAge": {
                        "$avg": "$age"
                  }
            }
      },
      {
            "$sort": {
                  "averageAge": -1
            }
      },
      {
            "$project": {
                  "_id": 0,
                  "city": "$_id",
                  "averageAge": 1
            }
      }
]
   ans-----

averageAge
31
city
"Los Angeles"
averageAge
28.666666666666668
city
"San Francisco"
averageAge
27
city
"Portland"
averageAge
26
city
"New York"

9. Count the number of users in each city.
   [
      {
            "$group": {
                  "_id": "$city",
                  "count": {
                        "$sum": 1
                  }
            }
      },
      {
            "$project": {
                  "_id": 0,
                  "city": "$_id",
                  "count": 1
            }
      }
]
   ans-------

count
2
city
"New York"
count
3
city
"San Francisco"
count
3
city
"Los Angeles"
count
2
city
"Portland"

10. Count the number of users with JavaScript skills.

[
      {
            "$match": {
                  "skills": "JavaScript"
            }
      },
      {
            "$count": "totalUsersWithJavaScript"
      }
]
ans-----
totalUsersWithJavaScript 6

11. Count the number of users with each skill.
    [
      {
    $unwind: "$skills"
      },
      {
    $group: {
    _id: "$_id",
    name: {$first: "$name"
                  },
                  "Total skills": {
    $sum: 1
                  }
            }
      }
]
    ans----------

\_id
8
name
"Hannah Robinson"
Total skills
3
\_id
9
name
"Isaac Moore"
Total skills
3
\_id
5
name
"Elijah Wilson"
Total skills
3
\_id
6
name
"Fiona Miller"
Total skills
3
\_id
1
name
"John Doe"
Total skills
3
\_id
7
name
"George Taylor"
Total skills
3
\_id
10
name
"Jasmine Hill"
Total skills
3
\_id
3
name
"Bob Williams"
Total skills
3
\_id
4
name
"Diana Brown"
Total skills
3
\_id
2
name
"Alice Johnson"
Total skills
3 12. Find users who have posts with more than 15 likes and a specific skill.

[
      {
$unwind: {
      path: "$posts",
            }
      },
      {
$match: {
      $and: [
                        {
                              "posts.likes": {$gt: 15
                              }
                        },
                        {
                              "skills": "React"
                        }
                  ]
            }
      }
]
ans--------------
{
"\_id": 1,
      "name": "John Doe",
      "age": 28,
      "city": "New York",
      "gender": "Male",
      "posts": {
            "title": "Post 2",
            "likes": 20,
            "comments": [
                  "Well done"
            ]
      },
      "friends": [
            2,
            3
      ],
      "skills": [
            "JavaScript",
            "React",
            "Node.js"
      ],
      "isActive": true
}
{
"\_id": 6,
      "name": "Fiona Miller",
      "age": 29,
      "city": "San Francisco",
      "gender": "Female",
      "posts": {
            "title": "Post 11",
            "likes": 22,
            "comments": [
                  "Awesome"
            ]
      },
      "friends": [
            4,
            5
      ],
      "skills": [
            "React",
            "Angular",
            "Node.js"
      ],
      "isActive": true
}
{
"\_id": 6,
      "name": "Fiona Miller",
      "age": 29,
      "city": "San Francisco",
      "gender": "Female",
      "posts": {
            "title": "Post 12",
            "likes": 25,
            "comments": [
                  "Great post!"
            ]
      },
      "friends": [
            4,
            5
      ],
      "skills": [
            "React",
            "Angular",
            "Node.js"
      ],
      "isActive": true
}
{
"\_id": 4,
      "name": "Diana Brown",
      "age": 30,
      "city": "San Francisco",
      "gender": "Female",
      "posts": {
            "title": "Post 8",
            "likes": 30,
            "comments": [
                  "Well done",
                  "Great post!"
            ]
      },
      "friends": [
            5,
            6
      ],
      "skills": [
            "React",
            "Node.js",
            "MongoDB"
      ],
      "isActive": true
}
{
"\_id": 8,
      "name": "Hannah Robinson",
      "age": 27,
      "city": "San Francisco",
      "gender": "Female",
      "posts": {
            "title": "Post 16",
            "likes": 28,
            "comments": [
                  "Well done"
            ]
      },
      "friends": [
            7,
            9
      ],
      "skills": [
            "JavaScript",
            "React",
            "Vue.js"
      ],
      "isActive": true
} 13. Find users with the highest total number of likes across all posts.
[
      {
$unwind: {
path: "$posts",
            }
      },
      {
$sort: {
                  "posts.likes": -1
            }
      },
      {
$limit: 1
      }
]
ans--------
{
"\_id": 4,
      "name": "Diana Brown",
      "age": 30,
      "city": "San Francisco",
      "gender": "Female",
      "posts": {
            "title": "Post 8",
            "likes": 30,
            "comments": [
                  "Well done",
                  "Great post!"
            ]
      },
      "friends": [
            5,
            6
      ],
      "skills": [
            "React",
            "Node.js",
            "MongoDB"
      ],
      "isActive": true
}

14. Find users who have friends and count the number of friends.


[
      {
    $match: {
      friends: {$exists: true,$ne: []
                  }
            }
      },
      {
    $project: {
      friends: {
        $size: "$friends"
                  }
            }
      }
]


15. Find users who have at least one post with a specific comment and a specific skill.

[
      {
    $unwind: {
      path: "$posts"
            }
      },
      {
    $match: {
      $and: [
                        {
                              "posts.comments": "Awesome"
                        },
                        {
                              "skills": "JavaScript"
                        }
                  ]
            }
      },
      {
    $group: {
      _id: "$_id",
      name: {$first: "$name"
                  },
      posts: {$first: "$posts"
                  }
            }
      }
]


16. Count users who have skills javascript and react.
[
      {
    $match: {
      skills: {
        $all: [
                              "React",
                              "JavaScript"
                        ]
                  }
            }
      }
]
  

17. count user who have second skills as React
[
      {
    $match: {
                  "skills.1": "React",
            }
      }
]
18. Categorise users by their city and gives their id and name.
[
      {
	$group: {
  	      _id: "$city",
                  "user": {
                  $push: {_id: "$_id",name: "$name"
                        }
                  }
            }
      }
]
19. Give user data whose city name starts with "New".

[
      {
		$match: {
                  "city":/^New[a-zA-Z
                  ]+$/
            }
      }
]
20. Add a "postCount" field representing the total number of posts for each user.
[
      {
   $addFields: {
     postCount: {
       $size: "$posts"
                  }
            }
      },
      {
    $project: {
   	  name: 1,
      postCount: 1,
      _id: 0
            }
      }
]

21. Add a "friendNames" field with the names of friends for each user.

[
      {
    $lookup: {
      from: "agrication",
      localField: "friends",
      foreignField: "_id",
      as: "friends"
            }
      },
      {
    $addFields: {
      friendNames: "$friends.name"
            }
      },
      {
    $project: {
      name: 1,
      friendNames: 1,
            }
      }
]

22. Display posts data that have more than 1 comments.

[
      {
    $unwind: {
      path: "$posts",
            }
      },
      {
    $addFields: {
      countComments: {$size: "$posts.comments"
                  }
            }
      },
      {
    $match: {
                  "countComments": {$gt: 1}
            }
      }
]